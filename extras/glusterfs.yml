- name: Configure GlusterFS on all nodes
  hosts: int_swarm # Targets all nodes for GlusterFS configuration
  become: true
  tasks:
    - name: Start and enable GlusterFS service # Ensures the GlusterFS service is running
      ansible.builtin.service:
        name: glusterd
        state: started
        enabled: true

    - name: Create brick directory # Creates directory for GlusterFS brick
      ansible.builtin.file:
        path: "/gluster/brick1"
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Create 10GB file for brick # Creates 10GB sparse file for brick storage
      ansible.builtin.command:
        cmd: "fallocate -l 10G /gluster/brick1/brick.img"
        creates: "/gluster/brick1/brick.img"

    - name: Format brick file with ext4 # Formats the brick file with ext4 filesystem
      ansible.builtin.filesystem:
        fstype: ext4
        dev: "/gluster/brick1/brick.img"

    - name: Create mount point for brick # Creates mount point for the brick filesystem
      ansible.builtin.file:
        path: "/gluster/mount1"
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Mount brick filesystem # Mounts the brick filesystem
      ansible.builtin.mount:
        path: "/gluster/mount1"
        src: "/gluster/brick1/brick.img"
        fstype: ext4
        opts: loop
        state: mounted

    - name: Create brick data directory # Creates data directory within mounted brick
      ansible.builtin.file:
        path: "/gluster/mount1/data"
        state: directory
        mode: "0755"
        owner: root
        group: root

- name: Create GlusterFS volumes on first manager
  hosts: int_swarm_managers[0] # Targets the first manager for volume creation
  become: true
  tasks:
    - name: Create GlusterFS volume with replicas # Creates distributed-replicated volume
      gluster.gluster.gluster_volume:
        name: "swarm-vol"
        state: present
        bricks: "{% for host in groups['int_swarm'] %}{{ hostvars[host]['ansible_host'] }}:/gluster/mount1/data{% if not loop.last %},{% endif %}{% endfor %}"
        cluster: "{{ groups['int_swarm'] | map('extract', hostvars, 'ansible_host') | list }}"
        replicas: "{{ groups['int_swarm'] | length }}"
        force: true
        start_on_create: true
        rebalance: false

- name: Mount GlusterFS volumes on all Swarm nodes
  hosts: int_swarm_managers, int_swarm_workers # Targets both managers and workers for GlusterFS mount
  become: true
  gather_facts: true
  tasks:
    - name: Create mount point for GlusterFS volume # Creates mount point for the volume
      ansible.builtin.file:
        path: "/mnt/swarm-vol"
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Ensure GlusterFS volume mounts on boot # Configures fstab for the GlusterFS volume
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^localhost:/swarm-vol\s+/mnt/swarm-vol\s+glusterfs'
        line: "localhost:/swarm-vol /mnt/swarm-vol glusterfs defaults,_netdev 0 0"
        create: true
        mode: "0644"

    - name: Mount GlusterFS volume immediately # Mounts the GlusterFS volume
      ansible.builtin.mount:
        path: "/mnt/swarm-vol"
        src: "localhost:/swarm-vol"
        fstype: glusterfs
        opts: defaults,_netdev
        state: mounted

    - name: Adjust permissions and ownership for GlusterFS mount # Sets proper permissions for the mount
      ansible.builtin.file:
        path: "/mnt/swarm-vol"
        owner: root
        group: docker
        state: directory
        recurse: true
