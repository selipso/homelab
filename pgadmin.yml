---
- name: Deploy pgAdmin stack to Docker Swarm
  hosts: int_swarm_managers[0]
  gather_facts: false
  tasks:
    # Set up networks for attaching services
    - name: Ensure 'proxy' network exists and attachable
      community.docker.docker_network:
        name: proxy
        driver: overlay
        attachable: true
        state: present
    - name: Ensure 'backend' network exists and attachable
      community.docker.docker_network:
        name: backend
        driver: overlay
        attachable: true
        state: present
    # Encrypted vars
    - name: Include encrypted variables
      ansible.builtin.include_vars:
        file: group_vars/secrets.yml

    # Create pgAdmin directories
    - name: Create pgAdmin directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "5050"
        group: "5050"
        mode: "0755"
      become: true
      loop:
        - /mnt/nfs/shared/pgadmin
        - /mnt/nfs/shared/config/pgadmin

    # Create servers.json from template
    - name: Create servers.json from template
      ansible.builtin.template:
        src: templates/pgadmin-servers.json.j2
        dest: /mnt/nfs/shared/config/pgadmin/servers.json
        owner: "5050"
        group: "5050"
        mode: "0644"
      become: true

    # Begin configuring the pgAdmin stack
    - name: Create temporary directory for compose stack
      ansible.builtin.tempfile:
        state: directory
        suffix: _compose
      register: temp_dir_result

    - name: Render and copy compose file as a stack to temp dir on manager
      ansible.builtin.template:
        src: templates/pgadmin.yml.j2
        dest: "{{ temp_dir_result.path }}/pgadmin.yml"

    - name: Deploy pgAdmin stack to Docker Swarm
      community.docker.docker_stack:
        state: present
        name: pgadmin
        compose: "{{ temp_dir_result.path }}/pgadmin.yml"
      register: stack_deploy_result

    - name: Clean up temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir_result.path }}"
        state: absent
      when: stack_deploy_result is succeeded