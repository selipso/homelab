networks:
  supabase-net:
    external: true
services:
  storage:
    hostname: storage
    image: supabase/storage-api:v1.24.6
    networks:
      - supabase-net
    volumes:
      - /mnt/Media/supastore:/var/lib/storage:z
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - "http://storage:5000/status"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      - db
      - rest
      - imgproxy
    deploy:
      replicas: 1
    environment:
      ANON_KEY: {{ ANON_KEY }}
      SERVICE_KEY: {{ SERVICE_ROLE_KEY }}
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: {{ JWT_SECRET }}
      DATABASE_URL: "postgres://supabase_storage_admin:{{ POSTGRES_PASSWORD }}@{{ POSTGRES_HOST }}:{{ POSTGRES_PORT }}/{{ POSTGRES_DB }}"
      FILE_SIZE_LIMIT: 52428800
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: {{ POOLER_TENANT_ID }}
      REGION: {{ S3_REGION }}
      STORAGE_BACKEND: file
      STORAGE_S3_ENDPOINT: {{ S3_ENDPOINT }}
      GLOBAL_S3_BUCKET: {{ S3_BUCKET }}
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://imgproxy:5001

  imgproxy:
    hostname: imgproxy
    image: darthsim/imgproxy:v3.8.0
    networks:
      - supabase-net
    volumes:
      - /mnt/Media/supastore:/var/lib/storage:z
    ports:
      - 5001:5001
    healthcheck:
      test:
        - CMD
        - imgproxy
        - health
      timeout: 5s
      interval: 5s
      retries: 3
    deploy:
      replicas: 1
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: {{ IMGPROXY_ENABLE_WEBP_DETECTION }}
