networks:
  supabase-net:
    external: true
services:
  storage:
    hostname: storage
    image: supabase/storage-api:v1.23.0
    networks:
      - supabase-net
    volumes:
      - /Volumes/tb:/var/lib/storage:z
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - "http://storage:5000/status"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      - db
      - rest
      - imgproxy
    deploy:
      replicas: 1
      placement:
        constraints: [node.platform.arch == aarch64]
      restart_policy:
        condition: on-failure
    environment:
      ANON_KEY: {{ ANON_KEY }}
      SERVICE_KEY: {{ SERVICE_ROLE_KEY }}
      POSTGREST_URL: http://rest:3000
      PGRST_JWT_SECRET: {{ JWT_SECRET }}
      DATABASE_URL: "postgres://supabase_storage_admin:{{ POSTGRES_PASSWORD }}@{{ POSTGRES_HOST }}:{{ POSTGRES_PORT }}/{{ POSTGRES_DB }}"
      FILE_SIZE_LIMIT: 52428800
      STORAGE_BACKEND: file
      FILE_STORAGE_BACKEND_PATH: /var/lib/storage
      TENANT_ID: stub
      REGION: stub
      GLOBAL_S3_BUCKET: stub
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: http://imgproxy:5001

  imgproxy:
    hostname: imgproxy
    image: darthsim/imgproxy:v3.8.0
    networks:
      - supabase-net
    volumes:
      - /Volumes/tb:/var/lib/storage:z
    healthcheck:
      test:
        - CMD
        - imgproxy
        - health
      timeout: 5s
      interval: 5s
      retries: 3
    deploy:
      replicas: 1
      placement:
        constraints: [node.platform.arch == aarch64]
      restart_policy:
        condition: on-failure
    environment:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: {{ IMGPROXY_ENABLE_WEBP_DETECTION }}

  minio:
    hostname: minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - supabase-net
    deploy:
      replicas: 1
      placement:
        constraints: [node.platform.arch == aarch64]
      restart_policy:
        condition: on-failure
    environment:
      MINIO_ROOT_USER: supa-storage
      MINIO_ROOT_PASSWORD: {{ MINIO_ROOT_PASSWORD }}
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://minio:9000/minio/health/live" ]
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - /Volumes/tb:/data:z

  minio-createbucket:
    image: minio/mc
    networks:
      - supabase-net
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set supa-minio http://minio:9000 supa-storage {{ MINIO_ROOT_PASSWORD }};
      /usr/bin/mc mb supa-minio/stub;
      exit 0;
      "
