networks:
  supabase-net:
    external: true
  proxy:
    external: true

services:
  studio:
    hostname: studio
    image: supabase/studio:2025.06.02-sha-8f2993d
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    networks:
      - supabase-net
    healthcheck:
      test:
        - CMD
        - node
        - -e
        - >
          fetch('http://studio:3000/api/platform/profile')
          .then((r) => { if (r.status !== 200) throw new Error(r.status) })
      timeout: 10s
      interval: 5s
      retries: 3
    depends_on:
      - analytics
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD }}
      DEFAULT_ORGANIZATION_NAME: {{ STUDIO_DEFAULT_ORGANIZATION }}
      DEFAULT_PROJECT_NAME: {{ STUDIO_DEFAULT_PROJECT }}
      SUPABASE_URL: http://kong:8000
      SUPABASE_PUBLIC_URL: {{ SUPABASE_PUBLIC_URL }}
      SUPABASE_ANON_KEY: {{ ANON_KEY }}
      SUPABASE_SERVICE_KEY: {{ SERVICE_ROLE_KEY }}
      AUTH_JWT_SECRET: {{ JWT_SECRET }}
      LOGFLARE_PRIVATE_ACCESS_TOKEN: {{ LOGFLARE_PRIVATE_ACCESS_TOKEN }}
      LOGFLARE_URL: http://analytics:4000
      NEXT_PUBLIC_ENABLE_LOGS: "true"
      NEXT_ANALYTICS_BACKEND_PROVIDER: postgres

  kong:
    hostname: kong
    image: kong:2.8.1
    networks:
      - supabase-net
      - proxy
    ports:
      - {{ KONG_HTTP_PORT }}:8000/tcp
      - {{ KONG_HTTPS_PORT }}:8443/tcp
    volumes:
      - /mnt/nfs/shared/supabase/api/kong.yml:/home/kong/temp.yml:ro,z
    depends_on:
      - analytics
    deploy:
      replicas: 1
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: {{ ANON_KEY }}
      SUPABASE_SERVICE_KEY: {{ SERVICE_ROLE_KEY }}
      DASHBOARD_USERNAME: {{ DASHBOARD_USERNAME }}
      DASHBOARD_PASSWORD: {{ DASHBOARD_PASSWORD }}
    entrypoint: >
      bash -c 'eval "echo \"$$(cat ~/temp.yml)\"" > ~/kong.yml && /docker-entrypoint.sh kong docker-start'

  auth:
    hostname: auth
    image: supabase/gotrue:v2.176.1
    deploy:
      replicas: 1
    networks:
      - supabase-net
    healthcheck:
      test:
        - CMD
        - wget
        - --no-verbose
        - --tries=1
        - --spider
        - "http://0.0.0.0:9999/health"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      - db
      - analytics
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: {{ API_EXTERNAL_URL }}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: "postgres://supabase_auth_admin:{{ POSTGRES_PASSWORD }}@{{ POSTGRES_HOST }}:{{ POSTGRES_PORT }}/{{ POSTGRES_DB }}"
      GOTRUE_SITE_URL: {{ SITE_URL }}
      GOTRUE_URI_ALLOW_LIST: {{ ADDITIONAL_REDIRECT_URLS }}
      GOTRUE_DISABLE_SIGNUP: {{ DISABLE_SIGNUP }}
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: {{ JWT_EXPIRY }}
      GOTRUE_JWT_SECRET: {{ JWT_SECRET }}
      GOTRUE_EXTERNAL_EMAIL_ENABLED: {{ ENABLE_EMAIL_SIGNUP }}
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: {{ ENABLE_ANONYMOUS_USERS }}
      GOTRUE_MAILER_AUTOCONFIRM: {{ ENABLE_EMAIL_AUTOCONFIRM }}
      GOTRUE_SMTP_ADMIN_EMAIL: {{ SMTP_ADMIN_EMAIL }}
      GOTRUE_SMTP_HOST: {{ SMTP_HOST }}
      GOTRUE_SMTP_PORT: {{ SMTP_PORT }}
      GOTRUE_SMTP_USER: {{ SMTP_USER }}
      GOTRUE_SMTP_PASS: {{ SMTP_PASS }}
      GOTRUE_SMTP_SENDER_NAME: {{ SMTP_SENDER_NAME }}
      GOTRUE_MAILER_URLPATHS_INVITE: {{ MAILER_URLPATHS_INVITE }}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: {{ MAILER_URLPATHS_CONFIRMATION }}
      GOTRUE_MAILER_URLPATHS_RECOVERY: {{ MAILER_URLPATHS_RECOVERY }}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: {{ MAILER_URLPATHS_EMAIL_CHANGE }}
      GOTRUE_EXTERNAL_PHONE_ENABLED: {{ ENABLE_PHONE_SIGNUP }}
      GOTRUE_SMS_AUTOCONFIRM: {{ ENABLE_PHONE_AUTOCONFIRM }}

  rest:
    hostname: rest
    image: postgrest/postgrest:v12.2.12
    deploy:
      replicas: 1
    networks:
      - supabase-net
    depends_on:
      - db
      - analytics
    environment:
      PGRST_DB_URI: "postgres://authenticator:{{ POSTGRES_PASSWORD }}@{{ POSTGRES_HOST }}:{{ POSTGRES_PORT }}/{{ POSTGRES_DB }}"
      PGRST_DB_SCHEMAS: {{ PGRST_DB_SCHEMAS }}
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: {{ JWT_SECRET }}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: {{ JWT_SECRET }}
      PGRST_APP_SETTINGS_JWT_EXP: {{ JWT_EXPIRY }}
    command: ["postgrest"]

  realtime-dev:
    image: supabase/realtime:v2.37.1
    deploy:
      replicas: 1
    networks:
      - supabase-net
    healthcheck:
      test:
        - CMD
        - curl
        - -sSfL
        - --head
        - -o
        - /dev/null
        - -H
        - "Authorization: Bearer {{ ANON_KEY }}"
        - "http://127.0.0.1:4000/api/tenants/realtime-dev/health"
      timeout: 5s
      interval: 5s
      retries: 3
    depends_on:
      - db
      - analytics
    environment:
      PORT: 4000
      DB_HOST: {{ POSTGRES_HOST }}
      DB_PORT: {{ POSTGRES_PORT }}
      DB_USER: supabase_admin
      DB_PASSWORD: {{ POSTGRES_PASSWORD }}
      DB_NAME: {{ POSTGRES_DB }}
      DB_AFTER_CONNECT_QUERY: "SET search_path TO _realtime"
      DB_ENC_KEY: supabaserealtime
      API_JWT_SECRET: {{ JWT_SECRET }}
      SECRET_KEY_BASE: {{ SECRET_KEY_BASE }}
      ERL_AFLAGS: "-proto_dist inet_tcp"
      DNS_NODES: "'realtime-dev'"
      RLIMIT_NOFILE: "10000"
      APP_NAME: realtime
      SEED_SELF_HOST: "true"
      RUN_JANITOR: "true"

  meta:
    hostname: meta
    image: supabase/postgres-meta:v0.89.3
    deploy:
      replicas: 1
    networks:
      - supabase-net
    depends_on:
      - db
      - analytics
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: {{ POSTGRES_HOST }}
      PG_META_DB_PORT: {{ POSTGRES_PORT }}
      PG_META_DB_NAME: {{ POSTGRES_DB }}
      PG_META_DB_USER: supabase_admin
      PG_META_DB_PASSWORD: {{ POSTGRES_PASSWORD }}

  functions:
    hostname: functions
    image: supabase/edge-runtime:v1.67.4
    networks:
      - supabase-net
    volumes:
      - /mnt/nfs/shared/supabase/functions:/home/deno/functions:Z
    depends_on:
      - analytics
    deploy:
      replicas: 1
    environment:
      JWT_SECRET: {{ JWT_SECRET }}
      SUPABASE_URL: http://kong:8000
      SUPABASE_ANON_KEY: {{ ANON_KEY }}
      SUPABASE_SERVICE_ROLE_KEY: {{ SERVICE_ROLE_KEY }}
      SUPABASE_DB_URL: "postgresql://postgres:{{ POSTGRES_PASSWORD }}@{{ POSTGRES_HOST }}:{{ POSTGRES_PORT }}/{{ POSTGRES_DB }}"
      VERIFY_JWT: "{{ FUNCTIONS_VERIFY_JWT }}"
    command:
      - start
      - --main-service
      - /home/deno/functions/main
