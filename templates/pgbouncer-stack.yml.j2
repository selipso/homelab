services:
  db:
    image: postgres:17-bookworm
    volumes:
      - /mnt/nfs/shared/db/data:/var/lib/postgresql/data
      - /mnt/nfs/shared/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: {{ POSTGRES_USER }}
      POSTGRES_PASSWORD: {{ POSTGRES_PASSWORD }}
      POSTGRES_DB: {{ POSTGRES_DB }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ POSTGRES_USER }}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    networks:
      - postgres

  pgbouncer:
    image: edoburu/pgbouncer:latest
    ports:
      - "6432:6432"
    environment:
      DB_USER: {{ POSTGRES_USER }}
      DB_PASSWORD: {{ POSTGRES_PASSWORD }}
      DB_HOST: db
      DB_NAME: {{ POSTGRES_DB }}
    volumes:
      - /mnt/nfs/shared/db/config/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - /mnt/nfs/shared/db/config/userlist.txt:/etc/pgbouncer/userlist.txt
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -p 6432"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
    networks:
      - postgres
      - backend

networks:
  postgres:
    external: true
  backend:
    external: true
