---
- name: Deploy unified database stack (PostgreSQL, PGBouncer, pgAdmin)
  hosts: int_swarm_managers[0]
  gather_facts: false
  become: true
  tasks:
    - name: Include encrypted variables
      ansible.builtin.include_vars:
        file: group_vars/secrets.yml

    - name: Create required networks
      community.docker.docker_network:
        name: "{{ item }}"
        driver: overlay
        attachable: true
        state: present
      loop:
        - db
        - postgres
        - proxy

    - name: Create database directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /mnt/nfs/shared/db/data
        - /mnt/nfs/shared/db/config
        - /mnt/nfs/shared/db/docker-entrypoint-initdb.d
        - /mnt/nfs/shared/pgadmin

    - name: Set pgAdmin directory ownership
      ansible.builtin.file:
        path: /mnt/nfs/shared/pgadmin
        owner: "5050"
        group: "5050"
        mode: "0700"
        recurse: true

    - name: Generate PGBouncer config
      ansible.builtin.template:
        src: templates/pgbouncer.ini.j2
        dest: "/mnt/nfs/shared/db/config/pgbouncer.ini"
        mode: "0644"

    - name: Generate pgAdmin servers config
      ansible.builtin.template:
        src: templates/pgadmin-servers.json.j2
        dest: "/mnt/nfs/shared/db/config/servers.json"
        mode: "0644"

    - name: Create temp directory for compose
      ansible.builtin.tempfile:
        state: directory
        suffix: _database
      register: temp_dir

    - name: Render compose file
      ansible.builtin.template:
        src: templates/database-stack.yml.j2
        dest: "{{ temp_dir.path }}/database-stack.yml"

    - name: Deploy database stack
      community.docker.docker_stack:
        state: present
        name: database
        compose: "{{ temp_dir.path }}/database-stack.yml"

    - name: Clean up temp directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent

    - name: Wait for services to be healthy
      ansible.builtin.pause:
        seconds: 30
        prompt: "Waiting for database services to initialize..."

    - name: Display service status
      ansible.builtin.shell: |
        docker service ls | grep database_
      register: service_status
      changed_when: false

    - name: Show service status
      ansible.builtin.debug:
        var: service_status.stdout_lines
