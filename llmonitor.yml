---
- name: Deploy Monitoring stack to Docker Swarm
  hosts: int_swarm_managers[0]
  gather_facts: false
  become: true
  tasks:
    # Set up networks for attaching services
    - name: Ensure 'proxy' network exists and attachable
      community.docker.docker_network:
        name: proxy
        driver: overlay
        attachable: true
        state: present
    - name: Ensure 'monitoring' network exists and attachable
      community.docker.docker_network:
        name: monitoring
        driver: overlay
        attachable: true
        state: present
    # Encrypted vars
    - name: Include encrypted variables
      ansible.builtin.include_vars:
        file: group_vars/secrets.yml

    # Begin configuring the monitoring stack
    # Create required directories with proper ownership
    - name: Create directory structure for bind mounts
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: '0755'
      loop:
        - { path: "/mnt/apps/grafana", owner: "472", group: "0" }       # Grafana
        - { path: "/mnt/apps/prometheus", owner: "1000", group: "0" }   # Prometheus data
        - { path: "/mnt/apps/n8n", owner: "1000", group: "0" }          # n8n

    - name: Create temporary directory for compose stack
      ansible.builtin.tempfile:
        state: directory
        suffix: _compose
      register: temp_dir_result
    - name: Render and copy compose file as a stack to temp dir on manager
      ansible.builtin.template:
        src: templates/llmonitor.yml.j2
        dest: "{{ temp_dir_result.path }}/llmonitor.yml"

    - name: Deploy Monitoring stack to Docker Swarm
      community.docker.docker_stack:
        state: present
        name: monitoring
        compose: "{{ temp_dir_result.path }}/llmonitor.yml"
      register: stack_deploy_result

    - name: Clean up temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir_result.path }}"
        state: absent
      when: stack_deploy_result is succeeded
